# Day 44 문제

## **쉬운 문제 (15개)**

### **React의 핵심 개념 이해**

- **질문**: React에서 컴포넌트란 무엇이며, 어떤 두 가지 형태로 작성할 수 있나요?
- **답변**: UI의 재사용 가능한 부분을 만드는 단위
함수형 컴포넌트: 함수로 정의하며, 주로 간단한 UI와 데이터 표시 용도로 사용됨. Hooks를 통해 상태를 추가할 수 있음.
클래스형 컴포넌트: 클래스 문법으로 정의하며, 더 복잡한 상태 관리와 생명주기 메서드가 필요한 경우 사용함.


### **JSX의 역할**

- **질문**: JSX란 무엇이며, React에서 어떤 역할을 하나요?
- **답변**: JSX는 JavaScript를 확장한 문법으로, HTML과 유사한 구조를 JavaScript 코드 내에서 사용할 수 있게 해줍니다. 이는 React에서 UI를 정의하는 데 사용됩니다.

### **State와 Props의 차이**

- **질문**: React에서 **state**와 **props**의 차이점을 설명하세요.
- **답변**:  props는 부모가 자식에게 전달하는 읽기 전용 데이터이고, state는 컴포넌트 내부에서 관리되는 동적인 데이터.

### **이벤트 처리 방식**

- **질문**: React에서 이벤트를 처리할 때 주의해야 할 두 가지 사항은 무엇인가요?
- **답변**: 이벤트 핸들러에 함수 참조 전달하기 (함수 자체를 전달해야함, 함수에 인자를 전달하고자 할 때는 화살표 함수를 사용) , 이벤트 핸들러에서 this 바인딩 주의하기

### **컴포넌트 내 조건부 렌더링**

- **질문**: 컴포넌트에서 조건부 렌더링을 구현하는 일반적인 방법 두 가지는 무엇인가요?
- **답변**: 삼항 연산자 사용하기, && 연산자 사용하기

### **리스트 렌더링과 Key**

- **질문**: React에서 배열을 렌더링할 때 각 요소에 `key`를 부여하는 이유는 무엇인가요?
- **답변**: ### 

- 키는 리스트에서 각 요소를 고유하게 식별하기 위한 문자열입니다. 키를 올바르게 설정하면 React가 효율적으로 변경 사항을 감지하고 업데이트할 수 있습니다.
- **주의사항**: 인덱스를 키로 사용하는 것은 권장되지 않습니다. 데이터의 순서가 변경되면 예기치 않은 동작이 발생할 수 있습니다.

### **useState Hook의 기본 사용법**

- **질문**: 함수형 컴포넌트에서 `useState` Hook을 사용하여 상태를 관리하는 기본적인 방법을 설명하세요.
- **답변**: 상태 변수 선언: useState는 초기 상태값을 인자로 받고, 상태 변수와 해당 상태를 변경하는 함수를 반환한다.
상태 업데이트: setCount와 같은 상태 업데이트 함수는 현재 상태 값을 바꾸고 컴포넌트를 다시 렌더링하게 함. 위 예제에서 버튼을 클릭할 때마다 setCount(count + 1)로 count 값을 증가시키고, 업데이트된 값이 화면에 표시됨.

### **useEffect Hook의 역할**

- **질문**: `useEffect` Hook은 어떤 용도로 사용되나요?
- **답변**: API 호출, 컴포넌트가 마운트/언마운트될 때 특정 작업 수행, 특정상태나 props가 변경될 때 작업 실행

### **Props로 함수 전달하기**

- **질문**: 부모 컴포넌트에서 자식 컴포넌트로 함수를 props로 전달하는 이유는 무엇인가요?
- **답변**: 부모 컴포넌트에서 자식 컴포넌트로 함수를 전달함으로써, 자식 컴포넌트가 부모의 상태를 변경하거나 부모의 특정 동작을 수행할 수 있게 됨.
 React의 단방향 데이터 흐름에서 컴포넌트 간의 동작을 효과적으로 관리할 수 있음.

### **컴포넌트의 생명주기 메서드**

- **질문**: 클래스형 컴포넌트에서 컴포넌트가 마운트된 직후에 호출되는 생명주기 메서드는 무엇인가요?
- **답변**: componentDidMount

### **고차 컴포넌트(HOC)의 기본 개념**

- **질문**: 고차 컴포넌트(HOC)란 무엇인가요?
- **답변**: 컴포넌트를 인자로 받아 새로운 컴포넌트를 반환하는 함수

### **고차 컴포넌트의 네이밍 컨벤션**

- **질문**: HOC의 이름을 지을 때 일반적으로 어떤 접두사를 사용하나요?
- **답변**: with - HOC가 원래 컴포넌트에 추가적인 기능이나 데이터를 포함하고 있음을 나타나기 위해 사용된다.

### **Context API의 목적**

- **질문**: React에서 Context API는 어떤 문제를 해결하기 위해 사용되나요?
- **답변**:  props 전달 문제 (props drilling)

### **Redux의 주요 요소**

- **질문**: Redux에서 상태 관리를 위한 세 가지 핵심 요소는 무엇인가요?
- **답변**: Store, Action, Reducer

### **React Router의 기본 사용법**

- **질문**: React Router에서 URL 경로에 따라 컴포넌트를 렌더링하기 위해 사용하는 컴포넌트는 무엇인가요?
- **답변**: Route